name: Sample Java Webapp CICD Workflow
on:
    push:
        branches:
            - master
            - 'feature/**'
        paths-ignore:
            - '.github/workflows/*'  
            - README.md  
    workflow_dispatch:        
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with: 
                distribution: 'temurin'
                java-version: 17
            - name: Cache Maven packages
              uses: actions/cache@v4
              with: 
                path: ~/.m2/repository
                key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            - name: Run Tests
              run: mvn test
    sonarqube:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
            with:
             fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              java-version: 17
              distribution: 'zulu' # Alternative distribution options are available.
          - name: Cache SonarQube packages
            uses: actions/cache@v4
            with:
              path: ~/.sonar/cache
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar
          - name: Cache Maven packages
            uses: actions/cache@v4
            with:
              path: ~/.m2
              key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
              restore-keys: ${{ runner.os }}-m2
          - name: Build and analyze
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ProjectTrialUtx_Sample-Java-Webapp
    build:  
        runs-on: ubuntu-latest   
        steps:
          - name: Get Code
            uses: actions/checkout@v4
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with: 
              distribution: 'temurin'
              java-version: 17
          - name: Build with Maven
            run: mvn clean package
          - name: Archive WAR Artifact
            uses: actions/upload-artifact@v4
            with:
              name: webapp-war
              path: target/*.war
    deploy:
        needs: build
        runs-on: ubuntu-latest 
        steps:
           - name: Download WAR Artifact
             uses: actions/download-artifact@v4
             with:
               name: webapp-war
           - name: Simulate Deployment Step
             run: |
                echo "Deploying the Java WebApp..."
    
